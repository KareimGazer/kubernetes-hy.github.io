{"componentChunkName":"component---src-templates-course-content-template-js","path":"/part-2/1-networking-between-pods","result":{"data":{"page":{"htmlAst":{"type":"element","tagName":"div","properties":{},"children":[{"type":"element","tagName":"text-box","properties":{"variant":"learningObjectives","name":"Learning Objectives"},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"After this section"}]},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"You know about Kubernetes DNS"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Send requests from a pod to another pod within a cluster"}]},{"type":"text","value":"\n"}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In part 1 we managed to setup networking configuration to enable routing traffic from outside of the cluster to a container inside a pod. In Part 2 we'll focus on communication between applications."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Kubernetes includes a DNS service so communication between pods and containers in Kubernetes is as much of a challenge as it was with containers in docker-compose. Containers in a pod share the network. As such every other container inside a pod is accessible from "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"localhost"}]},{"type":"text","value":". For communication between Pods a "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Service"}]},{"type":"text","value":" is used as they expose the Pods as a network service."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The following creates a cluster-internal IP which will enable other pods in the cluster to access the port 8080 of \"example\" application from "},{"type":"element","tagName":"a","properties":{"href":"http://example-service","target":"_blank","rel":["noopener","noreferrer"]},"children":[{"type":"text","value":"http://example-service"}]},{"type":"text","value":". ClusterIP is the default type for a Service."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"service.yaml"}]}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"yaml"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-yaml"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-yaml"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"apiVersion"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" v1\n"},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"kind"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" Service\n"},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"metadata"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"name"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" example"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":"service\n"},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"spec"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"type"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" ClusterIP\n  "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"selector"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"app"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" example\n  "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"ports"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"name"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" http\n      "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"protocol"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" TCP\n      "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"port"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"80"}]},{"type":"text","value":"\n      "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"targetPort"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"8080"}]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Alternatively each Pod has an IP created by Kubernetes."}]},{"type":"element","tagName":"text-box","properties":{"name":"Debugging hint","variant":"hint"},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Sometimes when you are lost the best choice is to manually test what is going on. So instead of deploying a new version while debugging just go inside a pod and/or send a request manually from a pod."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For example you can use "},{"type":"element","tagName":"a","properties":{"href":"https://en.wikipedia.org/wiki/BusyBox","target":"_blank","rel":["noopener","noreferrer"]},"children":[{"type":"text","value":"busybox"}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Try "},{"type":"element","tagName":"a","properties":{"href":"https://raw.githubusercontent.com/kubernetes/kubernetes/master/hack/testdata/recursive/pod/pod/busybox.yaml","target":"_blank","rel":["noopener","noreferrer"]},"children":[{"type":"text","value":"using this yaml here"}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"And then just exec the command like so:"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"text"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-text"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"$ kubectl exec -it busybox1 -- wget -qO - http://google.fi"}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Note that as the busybox yaml above is for a Pod, it will only ever create a single pod that you will have to manually destroy! Excellent for manual testing."}]}]},{"type":"element","tagName":"exercise","properties":{"name":"Exercise 2.01: Connecting pods"},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"  Connect the main application and ping/pong application. Instead of sharing data via files use HTTP endpoints to respond with the number of pongs. Deprecate all the volume between the two applications for the time being."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"  The output will stay the same:"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"text"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-text"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"2020-03-30T12:15:17.705Z: 8523ecb1-c716-4cb6-a044-b9e83bb98e43.\nPing / Pongs: 3"}]}]}]}]},{"type":"element","tagName":"exercise","properties":{"name":"Exercise 2.02: Project v1.0"},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"  Create a new container for the backend of the todo application."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"  You can use graphql or other solutions if you want."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"  Use ingress routing to enable access to the backend."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"  Create a POST /todos endpoint and a GET /todos endpoint in the new service where we can post a new todo and get all of the todos. You can also move the image logic to the new service if it requires backend logic."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"  The todos can be saved into memory, we'll add database later."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"  Frontend already has an input field. Connect it into our backend so that inputting data and pressing send will add a new todo into the list."}]}]},{"type":"element","tagName":"div","properties":{},"children":[{"type":"element","tagName":"quiz","properties":{"id":"f898b7ea-47a3-49ec-aedf-eb126e8eccb6"},"children":[]}]}]},"html":"<div><text-box variant='learningObjectives' name='Learning Objectives'><p>After this section</p><ul>\n<li>You know about Kubernetes DNS</li>\n<li>Send requests from a pod to another pod within a cluster</li>\n</ul></text-box><p>In part 1 we managed to setup networking configuration to enable routing traffic from outside of the cluster to a container inside a pod. In Part 2 we'll focus on communication between applications.</p><p>Kubernetes includes a DNS service so communication between pods and containers in Kubernetes is as much of a challenge as it was with containers in docker-compose. Containers in a pod share the network. As such every other container inside a pod is accessible from <code class=\"language-text\">localhost</code>. For communication between Pods a <em>Service</em> is used as they expose the Pods as a network service.</p><p>The following creates a cluster-internal IP which will enable other pods in the cluster to access the port 8080 of \"example\" application from <a href=\"http://example-service\" target=\"_blank\" rel=\"noopener noreferrer\">http://example-service</a>. ClusterIP is the default type for a Service.</p><p><strong>service.yaml</strong></p><div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Service\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> example<span class=\"token punctuation\">-</span>service\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> ClusterIP\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> example\n  <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> http\n      <span class=\"token key atrule\">protocol</span><span class=\"token punctuation\">:</span> TCP\n      <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n      <span class=\"token key atrule\">targetPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8080</span></code></pre></div><p>Alternatively each Pod has an IP created by Kubernetes.</p><text-box name=\"Debugging hint\" variant=\"hint\"><p>Sometimes when you are lost the best choice is to manually test what is going on. So instead of deploying a new version while debugging just go inside a pod and/or send a request manually from a pod.</p><p>For example you can use <a href=\"https://en.wikipedia.org/wiki/BusyBox\" target=\"_blank\" rel=\"noopener noreferrer\">busybox</a></p><p>Try <a href=\"https://raw.githubusercontent.com/kubernetes/kubernetes/master/hack/testdata/recursive/pod/pod/busybox.yaml\" target=\"_blank\" rel=\"noopener noreferrer\">using this yaml here</a></p><p>And then just exec the command like so:</p><div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ kubectl exec -it busybox1 -- wget -qO - http://google.fi</code></pre></div><p>Note that as the busybox yaml above is for a Pod, it will only ever create a single pod that you will have to manually destroy! Excellent for manual testing.</p></text-box><exercise name='Exercise 2.01: Connecting pods'><p>  Connect the main application and ping/pong application. Instead of sharing data via files use HTTP endpoints to respond with the number of pongs. Deprecate all the volume between the two applications for the time being.</p><p>  The output will stay the same:</p><div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">2020-03-30T12:15:17.705Z: 8523ecb1-c716-4cb6-a044-b9e83bb98e43.\nPing / Pongs: 3</code></pre></div></exercise><exercise name='Exercise 2.02: Project v1.0'><p>  Create a new container for the backend of the todo application.</p><p>  You can use graphql or other solutions if you want.</p><p>  Use ingress routing to enable access to the backend.</p><p>  Create a POST /todos endpoint and a GET /todos endpoint in the new service where we can post a new todo and get all of the todos. You can also move the image logic to the new service if it requires backend logic.</p><p>  The todos can be saved into memory, we'll add database later.</p><p>  Frontend already has an input field. Connect it into our backend so that inputting data and pressing send will add a new todo into the list.</p></exercise><div><quiz id=\"f898b7ea-47a3-49ec-aedf-eb126e8eccb6\"></quiz></div></div>","frontmatter":{"path":"/part-2/1-networking-between-pods","title":"Networking between pods"},"fileAbsolutePath":"/home/runner/work/kubernetes-hy.github.io/kubernetes-hy.github.io/data/part-2/1-networking-between-pods.md"},"allPages":{"edges":[{"node":{"id":"e4e5fe1c-25b1-57b3-87eb-e204e767a49c","frontmatter":{"path":"/faq","title":"FAQ"}}},{"node":{"id":"9f6e26aa-46a9-523d-96e4-a57c65ec083d","frontmatter":{"path":"/frontmatter-guide","title":"Frontmatter-guide"}}},{"node":{"id":"ecaa7011-87db-5ece-9b3c-1cfad638324a","frontmatter":{"path":"/","title":"Homepage"}}},{"node":{"id":"3d7eac33-2990-59d1-a002-64e0b0f4f370","frontmatter":{"path":"/known-problems-solutions","title":"Issues you may face"}}},{"node":{"id":"57c61ed7-37c4-5d0f-acd8-1dca0de6be4a","frontmatter":{"path":"/registration-and-completion","title":"Registration and Completion"}}},{"node":{"id":"ef82e5ba-97ba-51a5-ae2c-252b58c0c4f5","frontmatter":{"path":"/news-and-upcoming","title":"News and Upcoming"}}},{"node":{"id":"8ecc11b1-3298-589e-b97a-2a3a36861b8d","frontmatter":{"path":"/sanasto","title":"Sanasto"}}},{"node":{"id":"dab4b6a7-96cf-5efe-83f4-f5199c283e65","frontmatter":{"path":"/part-0","title":"Part 0"}}},{"node":{"id":"78948204-39a7-5f81-b9f4-3029400d5f82","frontmatter":{"path":"/part-1/2-introduction-to-debugging","title":"Introduction to Debugging"}}},{"node":{"id":"0b237cfb-5f2a-5d8e-9aa0-0cf9b045db3a","frontmatter":{"path":"/part-1/5-summary","title":"Summary"}}},{"node":{"id":"fe4a80ee-85ba-536e-bbf5-c5695399f40f","frontmatter":{"path":"/part-1","title":"Part 1"}}},{"node":{"id":"19841be9-897c-577a-9f82-5a7381bc073c","frontmatter":{"path":"/part-2/1-networking-between-pods","title":"Networking between pods"}}},{"node":{"id":"9e4ff8d0-2e6c-5d55-83a0-16ada460096d","frontmatter":{"path":"/part-2/2-organizing-a-cluster","title":"Organizing a cluster"}}},{"node":{"id":"0353d158-f751-57fd-94ce-373924da1b05","frontmatter":{"path":"/part-2/3-configuring-applications","title":"Configuring applications"}}},{"node":{"id":"eae6660d-1d18-527a-bc1c-0f2f7ab54c6d","frontmatter":{"path":"/part-2/4-statefulsets-and-jobs","title":"StatefulSets and Jobs"}}},{"node":{"id":"56f2a7a2-c9e2-5bbb-b6a7-76fd46592c69","frontmatter":{"path":"/part-2/5-monitoring","title":"Monitoring"}}},{"node":{"id":"f802a4ea-8d5a-503f-ad7b-d0138ab84c80","frontmatter":{"path":"/part-2/6-summary","title":"Summary"}}},{"node":{"id":"b810e0d9-0ac2-5073-a9dc-4ffd6649b7f7","frontmatter":{"path":"/part-2","title":"Part 2"}}},{"node":{"id":"40440141-c1a8-5723-858a-eea86119b5b6","frontmatter":{"path":"/part-3/4-summary","title":"Summary"}}},{"node":{"id":"708df9d2-30d1-518f-8066-80109a75c4dc","frontmatter":{"path":"/part-3","title":"Part 3"}}},{"node":{"id":"47a288aa-ece4-5ba6-ab6e-cbc63dbdc752","frontmatter":{"path":"/part-4/4-summary","title":"Summary"}}},{"node":{"id":"c8b1eb5e-3c98-59b3-b6e9-6173791d7e34","frontmatter":{"path":"/part-4","title":"Part 4"}}},{"node":{"id":"8a2e40fa-1703-5755-aa66-ac69bf2e291d","frontmatter":{"path":"/part-5/3-service-mesh","title":"Service Mesh"}}},{"node":{"id":"7bebb01b-c990-5e7e-a9aa-d60f10ba63dd","frontmatter":{"path":"/part-5/5-summary","title":"Summary and end"}}},{"node":{"id":"cbd58376-8d52-5297-b38d-653179a1226f","frontmatter":{"path":"/part-5","title":"Part 5"}}},{"node":{"id":"e4c53dca-867f-5293-9b28-657b695cd3f3","frontmatter":{"path":"/part-1/3-introduction-to-networking","title":"Introduction to Networking"}}},{"node":{"id":"fd6ebeaa-c808-5f11-9bdc-30e4f69b8a2a","frontmatter":{"path":"/part-1/4-introduction-to-storage","title":"Introduction to Storage"}}},{"node":{"id":"9f3c6f02-668a-517b-b7b6-1828f74c7200","frontmatter":{"path":"/part-3/1-introduction-to-gke","title":"Introduction to Google Kubernetes Engine"}}},{"node":{"id":"e80b74e8-a23b-5d3c-808b-833a72ac739c","frontmatter":{"path":"/part-3/2-deployment-pipeline","title":"Deployment Pipeline"}}},{"node":{"id":"78f84327-bd7b-5b5d-941d-9fae8bca88d3","frontmatter":{"path":"/part-3/3-gke-features","title":"GKE features"}}},{"node":{"id":"f5314214-d779-5fb4-a19f-ab7442f3fbb2","frontmatter":{"path":"/part-4/2-messaging-systems","title":"Messaging Systems"}}},{"node":{"id":"0a2d8cfd-8e40-59a7-a688-e8bdc9fb9e3a","frontmatter":{"path":"/part-4/3-gitops","title":"GitOps"}}},{"node":{"id":"39fb03b7-2abe-515a-a543-b812fcbfdba5","frontmatter":{"path":"/part-5/1-kubernetes-internals","title":"Kubernetes Internals"}}},{"node":{"id":"a899eeb2-4329-5c9b-aadf-2fb803fa9142","frontmatter":{"path":"/part-5/2-custom-resource-definitions","title":"Custom Resource Definitions"}}},{"node":{"id":"471982cb-da12-5799-a6b2-fa8a3e67aa0d","frontmatter":{"path":"/part-5/4-beyond-kubernetes","title":"Beyond Kubernetes"}}},{"node":{"id":"da15a80e-5316-5986-afcf-75d521065017","frontmatter":{"path":"/part-1/1-first-deploy","title":"First Deploy"}}},{"node":{"id":"33c86b5c-3684-5006-b4e7-dbd0c7cc04bc","frontmatter":{"path":"/part-4/1-update-strategies-and-prometheus","title":"Update Strategies and Prometheus"}}}]}},"pageContext":{}},"staticQueryHashes":["3294351120","994120085"]}